Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.

A subarray is a contiguous non-empty sequence of elements within an array.

 

Example 1:

Input: nums = [1,1,1], k = 2
Output: 2
Example 2:

Input: nums = [1,2,3], k = 3
Output: 2

class Solution {
public:
    int subarraySum(vector<int>& arr, int k) {
        int cnt =0 ;
        int n = arr.size();
        int curr_sum =0;
        unordered_map<int, int> mp;
        // mp.insert({0,1});
        for(int i=0;i<n;i++){
            curr_sum+=arr[i];
            if(curr_sum==k)cnt++;
        if(mp.find(curr_sum - k)!=mp.end()){
            cnt+=mp[curr_sum-k];
        }
            mp[curr_sum]+=1;
            
            
            
        }
        // if(cnt!=0)
        // return cnt-1;
        return cnt;
        
    }
};
